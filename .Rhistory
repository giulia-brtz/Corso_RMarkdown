iris
load(iris)
load("iris")
data<-load("iris")
data<-load(iris)
data<-iris
# assegnare il dataset all'oggetto data
data = iris
# rinominare la variabaile dipendente in y
data$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
data$x = iris$Species
# maggiori dettagli sulla x
table(data$x)
# grafico
plot(data$y ~ data$x)
# regressione
m = lm(y ~ x, data = data)
# summary del modello
summary(m)
# grafico
plot(data$y ~ data$x)
head(iris)
str(iris)
# rinominare la variabaile dipendente in y
data$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
data$x = iris$Species
# maggiori dettagli sulla x
table(data$x)
# grafico
plot(data$y ~ data$x)
# regressione
m = lm(y ~ x, data = data)
# summary del modello
summary(m)
install.packages("bookdown")
knitr::opts_chunk$set(echo = TRUE)
data("iris")
dati="iris"
head(dati)
force(iris)
save.image("C:/Users/giuli/Desktop/Corso_RMarkdown/envprova.RData")
dati=iris
save.image("C:/Users/giuli/Desktop/Corso_RMarkdown/envprova.RData")
#data("iris")
#dati=iris
load("enprova.RData")
getwd()
dir()
#data("iris")
#dati=iris
load("envprova.RData")
(plot(data$y ~ data$x))
# rinominare la variabaile dipendente in y
data$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
data$x = iris$Species
(plot(data$y ~ data$x))
View(data)
# assegnare il dataset all'oggetto data
data = iris
# rinominare la variabaile dipendente in y
data$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
data$x = iris$Species
(plot(data$y ~ data$x))
# rinominare la variabaile dipendente in y
data$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
data$x = iris$Species
# rinominare la variabile indipedente in x
data$x = iris$Species
#data("iris")
#dati=iris
load("envprova.RData")
# assegnare il dataset all'oggetto data
dati = iris
# rinominare la variabaile dipendente in y
dati$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
dati$x = iris$Species
# maggiori dettagli sulla x
table(dati$x)
plot(dati$y ~ dati$x)
plot(dati$y ~ dati$x)
knitr::opts_chunk$set(echo = TRUE)
#data("iris")
#dati=iris
load("envprova.RData")
# assegnare il dataset all'oggetto data
dati = iris
# rinominare la variabaile dipendente in y
dati$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
dati$x = iris$Species
# maggiori dettagli sulla x
table(dati$x)
# summary del modello
summary(m)
# assegnare il dataset all'oggetto data
dati = iris
# rinominare la variabaile dipendente in y
dati$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
dati$x = iris$Species
# maggiori dettagli sulla x
table(dati$x)
plot(dati$y ~ dati$x)
knitr::opts_chunk$set(echo = TRUE)
#data("iris")
#dati=iris
load("envprova.RData")
plot(dati$y ~ dati$x)
knitr::opts_chunk$set(echo = TRUE)
#data("iris")
#dati=iris
#load("envprova.RData")
# assegnare il dataset all'oggetto data
dati = iris
# rinominare la variabaile dipendente in y
dati$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
dati$x = iris$Species
# maggiori dettagli sulla x
table(dati$x)
plot(dati$y ~ dati$x)
knitr::opts_chunk$set(echo = TRUE)
#data("iris")
#dati=iris
#load("envprova.RData")
plot(dati$y ~ dati$x)
#data("iris")
#dati=iris
#load("envprova.RData")
# assegnare il dataset all'oggetto data
dati = iris
# rinominare la variabaile dipendente in y
dati$y = iris$Sepal.Length
# rinominare la variabile indipedente in x
dati$x = iris$Species
install.packages("stargazer")
m = lm(y ~ x, data = dati
library(stargazer)
library("stargazer")
m = lm(y ~ x, data = dati)
stargazer(dati, type="latex", summary = TRUE,
title= "Tabella di summary", digits = 2, header=FALSE)
library(stargazer)
stargazer(m, type = "html", summary = TRUE, title = "Risultati del modello", digits = 2, header = FALSE)
library(stargazer)
stargazer(m, type = "laTeX", summary = TRUE, title = "Risultati del modello", digits = 2, header = FALSE)
library(stargazer)
stargazer(m, type = "LaTeX", summary = TRUE, title = "Risultati del modello", digits = 2, header = FALSE)
library(stargazer)
stargazer(m, type = "latex", summary = TRUE, title = "Risultati del modello", digits = 2, header = FALSE)
library(stargazer)
stargazer(m, type = "latex", summary = TRUE, title = "Risultati del modello", digits = 2, header = FALSE)
dati$y[1]
(dati$y[1]-mean(y))/sd(y)
(dati$y[1]-mean(dati$y))/sd(dati$y)
$$z_i=\dfrac{x_i-\bar{X}}{sd} $$
$$z_i=\dfrac{x_i-\bar{X}}{sd} $$
knitr::opts_chunk$set(echo = TRUE)
grafico = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
install.packages("ggplot")
library(ggplot2)
grafico = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
plotly::ggplotly(grafico)
library(plotly)
install.packages("plotly")
library(ggplot2)
library(plotly)
grafico = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
plotly::ggplotly(grafico)
grafico = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico
library(ggplot2)
library(plotly)
grafico1 = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
plotly::ggplotly(grafico1)
grafico2 = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
grafico2
library(ggplot2)
library(plotly)
grafico1 = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
plotly::ggplotly(grafico1)
grafico2 = ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_bw() + theme(legend.position = "none")
#| fig-cap: "Il mio grafico"
#| fig-cap-location: top
#| out-width: 50%
#| fig-align: center
#| label: fig-pinguino
library(ggplot2)
ggplot(iris,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_light() + theme(legend.position = "none")
#| fig-cap: "Il mio grafico"
#| fig-cap-location: top
#| out-width: 50%
#| fig-align: center
#| label: fig-pinguino
library(ggplot2)
ggplot(dati,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_light() + theme(legend.position = "none")
View(dati)
#| fig-cap: "Il mio grafico"
#| fig-cap-location: top
#| out-width: 50%
#| fig-align: center
#| label: fig-pinguino
library(ggplot2)
ggplot(dati,
aes(y=y,x=x, color =shape, size = peri)) + geom_point() +
theme_light() + theme(legend.position = "none")
#| fig-cap: "Il mio grafico"
#| fig-cap-location: top
#| out-width: 50%
#| fig-align: center
#| label: fig-pinguino
library(ggplot2)
ggplot(rock,
aes(y=peri,x=shape, color =shape, size = peri)) + geom_point() +
theme_light() + theme(legend.position = "none")
#| fig-cap: "fiore ape"
#| fig-cap-location: top
#| out-width: 50%
#| label: fig-ape
#| fig-align: center
knitr::include_graphics("img/Zinnia_elegans_with_Bombus_01.JPG")
